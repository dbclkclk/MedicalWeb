@model MedicalFrontend.Models.PatientViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PatientViewModel</h4>
        <hr />
        @if (!ViewData.ModelState.IsValid)
        {
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(true, "", new { @class = "text-danger" }).ToHtmlString()))
        }
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, "Select Gender", new { htmlAttributes = new { @class = "form-control", @readonly = @User.IsInRole("Doctor") ? "readonly" : "" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appointment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="appointmentdatetime">
                @Html.EditorFor(model => model.Appointment, new { htmlAttributes = new { @class = "form-control appointmentdatetime" } })
                <span class="glyphicon glyphicon-calendar"></span>
                @Html.ValidationMessageFor(model => model.Appointment, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (User.IsInRole("Doctor"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.DoctorComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DoctorComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DoctorComment, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (User.IsInRole("Doctor"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.completed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.completed)
                        @Html.ValidationMessageFor(model => model.completed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

<script type="text/javascript">
            $(function () {
                $('.appointmentdatetime').datetimepicker();
            });
</script>