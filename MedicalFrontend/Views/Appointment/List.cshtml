@model IEnumerable<MedicalFrontend.Models.PatientViewModel>

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>List</h2>

<p>
@if (User.IsInRole("Nurse"))
{
    @Html.ActionLink("Create New", "Create")
}
</p>
<p>
    @if (!ViewData.ModelState.IsValid)
    {
        @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(true, "", new { @class = "text-danger" }).ToHtmlString()))
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Appointment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DoctorComment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.completed)
        </th>
        <th></th>
    </tr>

@if (Model != null)
{
    foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Appointment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DoctorComment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.completed)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @if (User.IsInRole("Nurse"))
            {
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            }
        </td>
    </tr>
    }
}

</table>
